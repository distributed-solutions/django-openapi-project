version: "3.7"

services:

  traefik:
    image: traefik:v2.1
    restart: always
    command: >
      --log.level=DEBUG
      --api.insecure=true
      --providers.docker=true
      --providers.docker.exposedbydefault=false
      --entrypoints.web.address=:80
      --entrypoints.web-secure.address=:443
      --accesslog=true
      --metrics.prometheus=true
      --ping=true
    #      --certificatesresolvers.le.acme.email=osintsev@gmail.com
    #      --certificatesresolvers.le.acme.storage=/acme/acme.json
    #      --certificatesresolvers.le.acme.tlschallenge=true
    depends_on:
      - api
    ports:
      - 80:80
      # - 443:443
      - 8080:8080
    volumes:
      - "traefik-data:/acme"
      - "/var/run/docker.sock:/var/run/docker.sock:ro"

  api:
    build: .
    restart: always
    environment:
      - DEBUG=True
      - SECRET_KEY=${SECRET_KEY}
      - DATABASE_URL=psql://postgres:${POSTGRES_PASSWORD}@postgres/postgres
    volumes:
      - ${PWD}:/app
    ports:
      - 8000
    depends_on:
      - postgres
    labels:
      - "traefik.enable=true"
#     - "traefik.http.routers.api.tls=true"
      - "traefik.http.routers.api.rule=Host(`api.localhost`)"
      - "traefik.http.routers.api.entrypoints=web"

  postgres:
    image: postgres:12.1-alpine
    restart: always
    ports:
      - 5432
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    volumes:
      - postgres-data:/var/lib/postgresql/data

  adminer:
    image: adminer
    restart: always
    ports:
      - 8080
    environment:
      - ADMINER_DEFAULT_USER=postgres
      - ADMINER_DEFAULT_PASSWORD=${POSTGRES_PASSWORD}
      - ADMINER_DEFAULT_SERVER=postgres
      - ADMINER_DESIGN=pilot
    depends_on:
      - postgres
    labels:
      - "traefik.enable=true"
#     - "traefik.http.routers.api.tls=true"
      - "traefik.http.routers.backend.rule=Host(`adminer.localhost`)"
      - "traefik.http.routers.backend.entrypoints=web"

volumes:
  postgres-data:
  traefik-data:
